{
  "content": [
    "|Discord"
  ],
  "Discord": {
    "level": 1,
    "url": "https://discord.com/developers/docs/game-sdk/discord#discord",
    "content": [
      "> info\n> Need help with the SDK? Talk to us in the Discord Developers Server!",
      "> warn\n> Selling SKUs on Discord has now been discontinued as of March 1, 2022. Read here for more info.",
      "> danger\n> The GameSDK's Achievements, Applications, Voice, Images, Lobbies, Networking, Storage, and Store (purchases and discounts) features have been deprecated, and will be decommissioned on May 2, 2023. Read more",
      "Making a game? Need a whole bunch of fancy APIs to help make it great and your players' lives a breeze? Look no further! The Discord GameSDK is an easy drop-in SDK to help you manage all the hard things that come with making a game. Well, all the hards things about coding it at least. Interpersonal communication skills are on you (have you heard of this cool chat app called Discord?).",
      "OK, cool, so how's it work?",
      "|General Structure",
      "|Functions in the SDK",
      "|Environment Variables",
      "|Error Handling",
      "|Data Models",
      "|Create",
      "|Destroy",
      "|SetLogHook",
      "|RunCallbacks",
      "|GetActivityManager",
      "|GetRelationshipManager",
      "|GetImageManager",
      "|GetUserManager",
      "|GetLobbyManager",
      "|GetNetworkManager",
      "|GetOverlayManager",
      "|GetApplicationManager",
      "|GetStorageManager",
      "|GetStoreManager",
      "|GetVoiceManager",
      "|GetAchievementManager"
    ],
    "General Structure": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#general-structure",
      "content": [
        "At a high level, the Discord GameSDK has a class, Discord. This class is in charge of the creation of a few \"manager\" sub-classes. They are:",
        [
          "ActivityManager - for Rich Presence and game invites",
          "OverlayManager - for interacting with Discord's built-in overlay",
          "RelationshipManager - for users' social relationships across Discord, including friends list",
          "StoreManager - for all things entitlements and SKUs, including IAP",
          "UserManager - for fetching user data for a given id and the current user"
        ],
        "Deprecated managers:",
        [
          "AchievementManager - for achievements!",
          "ApplicationManager - for retrieving a user's OAuth2 bearer token, locale, and current game branch",
          "ImageManager - for getting data about images on Discord, like user avatars or chat images",
          "LobbyManager - for multiplayer lobbies",
          "NetworkManager - for all your networking layer needs",
          "StorageManager - for saving game data to the disk and the cloud",
          "VoiceManager - to make use of Discord's awesome voice chat"
        ],
        "Each one of these managers contain a number of methods and events used to interact with Discord in the context of the manager. For example, RelationshipManager has a function called Filter(), which lets you pare down a user's inter-Discord relationships based on a boolean condition, like being friends!"
      ]
    },
    "Functions in the SDK": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#functions-in-the-sdk",
      "content": [
        "Most functions in the Discord GameSDK, uh, function in a similar way. They take whatever parameters are required for the function to do its job\u2014a user id, the requested size for an image, etc.\u2014and a callback by means of a function pointer. That callback is fired when the function completes its work, letting you handle events without worrying about piping asynchronously-returned data to the right context.",
        "Some functions behave with a normal return behavior; e.g. RelationshipManager.Count() just returns the number directly. Don't worry, it's outlined in the docs.",
        "A quick example with our C# binding:",
        {
          "language": "c#",
          "code": "var userManager = discord.GetUserManager();\n\n// Return via callback\nuserManager.GetUser(290926444748734465, (Discord.Result result, ref Discord.User otherUser) =>\n{\n  if (result == Discord.Result.Ok)\n  {\n    Console.WriteLine(otherUser.Username);\n    Console.WriteLine(otherUser.Id);\n  }\n});\n\n\n// Return normally\nuserManager.OnCurrentUserUpdate += () =>\n{\n    var currentUser = userManager.GetCurrentUser();\n        Console.WriteLine(currentUser.Username);\n        Console.WriteLine(currentUser.Discriminator);\n        Console.WriteLine(currentUser.Id);\n};\n"
        }
      ]
    },
    "Environment Variables": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#environment-variables",
      "content": [
        "Discord passes a number of environment variables down to the SDK. These are accessed by various methods in the SDK and can be changed for local testing by changing the value in your local environment.",
        "|SDK Environment Variables"
      ],
      "SDK Environment Variables": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#environment-variables-sdk-environment-variables",
        "content": [
          [
            [
              "name",
              "method",
              "description"
            ],
            [
              "DISCORD_INSTANCE_ID",
              "Local Testing",
              "the locally running instance of Discord to connect to; allows you to choose between multiple running clients"
            ],
            [
              "DISCORD_ACCESS_TOKEN",
              "ApplicationManager.GetOAuth2Token()",
              "the connected user's bearer token"
            ],
            [
              "DISCORD_CURRENT_LOCALE",
              "ApplicationManager.GetCurrentLocale()",
              "the language that Discord is in for the connected user"
            ],
            [
              "DISCORD_CURRENT_BRANCH",
              "ApplicationManager.GetCurrentBranch()",
              "the branch of the running application that the user has launched"
            ],
            [
              "DISCORD_STORAGE_PATH",
              "StorageManager.GetPath()",
              "the path to which Discord will save files if you're using the StorageManager"
            ]
          ]
        ]
      }
    },
    "Error Handling": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#error-handling",
      "content": [
        "Debugging is a pain, so before we get into the meat of the SDK, we want to make sure you're prepared for when things go awry. Within the Discord core is a function called SetLogHook(). It takes a level, which is minimum level of log message you want to listen to, and a callback function:",
        {
          "language": "cs",
          "code": "public void LogProblemsFunction(Discord.LogLevel level, string message)\n{\n  Console.WriteLine(\"Discord:{0} - {1}\", level, message);\n}\n\ndiscord.SetLogHook(Discord.LogLevel.Debug, LogProblemsFunction);\n"
        },
        "You should begin your integration by setting up this callback to help you debug. Helpfully, if you put a breakpoint inside the callback function you register here, you'll be able to see the stack trace for errors you run into (as long as they fail synchronously). Take the guess work out of debugging, or hey, ignore any and all logging by setting a callback that does nothing. We're not here to judge."
      ]
    },
    "Data Models": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#data-models",
      "content": [
        "|Result Enum",
        "|LogLevel Enum",
        "|CreateFlags Enum"
      ],
      "Result Enum": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#data-models-result-enum",
        "content": [
          [
            [
              "Code",
              "value",
              "description"
            ],
            [
              "0",
              "Ok",
              "everything is good"
            ],
            [
              "1",
              "ServiceUnavailable",
              "Discord isn't working"
            ],
            [
              "2",
              "InvalidVersion",
              "the SDK version may be outdated"
            ],
            [
              "3",
              "LockFailed",
              "an internal error on transactional operations"
            ],
            [
              "4",
              "InternalError",
              "something on our side went wrong"
            ],
            [
              "5",
              "InvalidPayload",
              "the data you sent didn't match what we expect"
            ],
            [
              "6",
              "InvalidCommand",
              "that's not a thing you can do"
            ],
            [
              "7",
              "InvalidPermissions",
              "you aren't authorized to do that"
            ],
            [
              "8",
              "NotFetched",
              "couldn't fetch what you wanted"
            ],
            [
              "9",
              "NotFound",
              "what you're looking for doesn't exist"
            ],
            [
              "10",
              "Conflict",
              "user already has a network connection open on that channel"
            ],
            [
              "11",
              "InvalidSecret",
              "activity secrets must be unique and not match party id"
            ],
            [
              "12",
              "InvalidJoinSecret",
              "join request for that user does not exist"
            ],
            [
              "13",
              "NoEligibleActivity",
              "you accidentally set an ApplicationId in your UpdateActivity() payload"
            ],
            [
              "14",
              "InvalidInvite",
              "your game invite is no longer valid"
            ],
            [
              "15",
              "NotAuthenticated",
              "the internal auth call failed for the user, and you can't do this"
            ],
            [
              "16",
              "InvalidAccessToken",
              "the user's bearer token is invalid"
            ],
            [
              "17",
              "ApplicationMismatch",
              "access token belongs to another application"
            ],
            [
              "18",
              "InvalidDataUrl",
              "something internally went wrong fetching image data"
            ],
            [
              "19",
              "InvalidBase64",
              "not valid Base64 data"
            ],
            [
              "20",
              "NotFiltered",
              "you're trying to access the list before creating a stable list with Filter()"
            ],
            [
              "21",
              "LobbyFull",
              "the lobby is full"
            ],
            [
              "22",
              "InvalidLobbySecret",
              "the secret you're using to connect is wrong"
            ],
            [
              "23",
              "InvalidFilename",
              "file name is too long"
            ],
            [
              "24",
              "InvalidFileSize",
              "file is too large"
            ],
            [
              "25",
              "InvalidEntitlement",
              "the user does not have the right entitlement for this game"
            ],
            [
              "26",
              "NotInstalled",
              "Discord is not installed"
            ],
            [
              "27",
              "NotRunning",
              "Discord is not running"
            ],
            [
              "28",
              "InsufficientBuffer",
              "insufficient buffer space when trying to write"
            ],
            [
              "29",
              "PurchaseCancelled",
              "user cancelled the purchase flow"
            ],
            [
              "30",
              "InvalidGuild",
              "Discord guild does not exist"
            ],
            [
              "31",
              "InvalidEvent",
              "the event you're trying to subscribe to does not exist"
            ],
            [
              "32",
              "InvalidChannel",
              "Discord channel does not exist"
            ],
            [
              "33",
              "InvalidOrigin",
              "the origin header on the socket does not match what you've registered (you should not see this)"
            ],
            [
              "34",
              "RateLimited",
              "you are calling that method too quickly"
            ],
            [
              "35",
              "OAuth2Error",
              "the OAuth2 process failed at some point"
            ],
            [
              "36",
              "SelectChannelTimeout",
              "the user took too long selecting a channel for an invite"
            ],
            [
              "37",
              "GetGuildTimeout",
              "took too long trying to fetch the guild"
            ],
            [
              "38",
              "SelectVoiceForceRequired",
              "push to talk is required for this channel"
            ],
            [
              "39",
              "CaptureShortcutAlreadyListening",
              "that push to talk shortcut is already registered"
            ],
            [
              "40",
              "UnauthorizedForAchievement",
              "your application cannot update this achievement"
            ],
            [
              "41",
              "InvalidGiftCode",
              "the gift code is not valid"
            ],
            [
              "42",
              "PurchaseError",
              "something went wrong during the purchase flow"
            ],
            [
              "43",
              "TransactionAborted",
              "purchase flow aborted because the SDK is being torn down"
            ]
          ]
        ]
      },
      "LogLevel Enum": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#data-models-loglevel-enum",
        "content": [
          [
            [
              "value",
              "description"
            ],
            [
              "Error",
              "Log only errors"
            ],
            [
              "Warning",
              "Log warnings and errors"
            ],
            [
              "Info",
              "Log info, warnings, and errors"
            ],
            [
              "Debug",
              "Log all the things!"
            ]
          ]
        ]
      },
      "CreateFlags Enum": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#data-models-createflags-enum",
        "content": [
          [
            [
              "value",
              "description"
            ],
            [
              "Default",
              "Requires Discord to be running to play the game"
            ],
            [
              "NoRequireDiscord",
              "Does not require Discord to be running, use this on other platforms"
            ]
          ]
        ]
      }
    },
    "Create": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#create",
      "content": [
        "Creates an instance of Discord to initialize the SDK. This is the overlord of all things Discord. We like to call her Nelly.",
        "Returns a new Discord.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#create-parameters",
        "content": [
          [
            [
              "name",
              "type",
              "description"
            ],
            [
              "clientId",
              "Int64",
              "your application's client id"
            ],
            [
              "flags",
              "CreateFlags",
              "the creation parameters for the SDK, outlined above"
            ]
          ]
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#create-example",
        "content": [
          {
            "language": "",
            "code": "// c++ land\ndiscord::Core* core{};\ndiscord::Core::Create(53908232506183680, DiscordCreateFlags_Default, &core);\n\n// c# land\nvar discord = new Discord(53908232506183680, (UInt64)Discord.CreateFlags.Default);\n"
          }
        ]
      }
    },
    "Destroy": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#destroy",
      "content": [
        "Destroys the instance. Wave goodbye, Nelly! You monster. In C# land, this is Dispose().",
        "> info\n> The C++ binding does not include a destroy() method, as the destructor for the Core does the work for you.",
        "Returns void.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#destroy-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#destroy-example",
        "content": [
          {
            "language": "cs",
            "code": "discord.Dispose();\n"
          }
        ]
      }
    },
    "SetLogHook": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#setloghook",
      "content": [
        "Registers a logging callback function with the minimum level of message to receive. The callback function should have a signature of:",
        {
          "language": "",
          "code": "MyCallbackFunction(LogLevel level, string message);\n"
        },
        "Returns void.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#setloghook-parameters",
        "content": [
          [
            [
              "name",
              "type",
              "description"
            ],
            [
              "level",
              "LogLevel",
              "the minimum level of event to log"
            ],
            [
              "callback",
              "function",
              "the callback function to catch the messages"
            ]
          ]
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#setloghook-example",
        "content": [
          {
            "language": "cs",
            "code": "public void LogProblemsFunction(Discord.LogLevel level, string message)\n{\n  Console.WriteLine(\"Discord:{0} - {1}\", level, message);\n}\n\ndiscord.SetLogHook(Discord.LogLevel.Debug, LogProblemFunctions);\n"
          }
        ]
      }
    },
    "RunCallbacks": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#runcallbacks",
      "content": [
        "Runs all pending SDK callbacks. Put this in your game's main event loop, like Update() in Unity. That way, the first thing your game does is check for any new info from Discord.",
        "This function also serves as a way to know that the local Discord client is still connected. If the user closes Discord while playing your game, RunCallbacks() will return/throw Discord.Result.NotRunning.",
        "In C and C++, this function returns Discord.Result. In C#, it returns void and will throw Discord.Result error if something went wrong.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#runcallbacks-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#runcallbacks-example",
        "content": [
          {
            "language": "cs",
            "code": "void Update()\n{\n  discord.RunCallbacks();\n}\n"
          }
        ]
      }
    },
    "GetActivityManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getactivitymanager",
      "content": [
        "Fetches an instance of the manager for interfacing with activities in the SDK.",
        "Returns an ActivityManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getactivitymanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getactivitymanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var activityManager = discord.GetActivityManager();\n"
          }
        ]
      }
    },
    "GetRelationshipManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getrelationshipmanager",
      "content": [
        "Fetches an instance of the manager for interfacing with relationships in the SDK.",
        "Returns a RelationshipManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getrelationshipmanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getrelationshipmanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var relationshipManager = discord.GetRelationshipManager();\n"
          }
        ]
      }
    },
    "GetImageManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getimagemanager",
      "content": [
        "Fetches an instance of the manager for interfacing with images in the SDK.",
        "Returns an ImageManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getimagemanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getimagemanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var imageManager = discord.GetImageManager();\n"
          }
        ]
      }
    },
    "GetUserManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getusermanager",
      "content": [
        "Fetches an instance of the manager for interfacing with users in the SDK.",
        "Returns an UserManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getusermanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getusermanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var userManager = discord.GetUserManager();\n"
          }
        ]
      }
    },
    "GetLobbyManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getlobbymanager",
      "content": [
        "Fetches an instance of the manager for interfacing with lobbies in the SDK.",
        "Returns a LobbyManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getlobbymanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getlobbymanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var lobbyManager = discord.GetLobbyManager();\n"
          }
        ]
      }
    },
    "GetNetworkManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getnetworkmanager",
      "content": [
        "Fetches an instance of the manager for interfacing with networking in the SDK.",
        "Returns an NetworkManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getnetworkmanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getnetworkmanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var networkManager = discord.GetNetworkManager();\n"
          }
        ]
      }
    },
    "GetOverlayManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getoverlaymanager",
      "content": [
        "Fetches an instance of the manager for interfacing with the overlay in the SDK.",
        "Returns an OverlayManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getoverlaymanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getoverlaymanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var overlayManager = discord.GetOverlayManager();\n"
          }
        ]
      }
    },
    "GetApplicationManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getapplicationmanager",
      "content": [
        "Fetches an instance of the manager for interfacing with applications in the SDK.",
        "Returns an ApplicationManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getapplicationmanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getapplicationmanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var applicationManager = discord.GetApplicationManager();\n"
          }
        ]
      }
    },
    "GetStorageManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getstoragemanager",
      "content": [
        "Fetches an instance of the manager for interfacing with storage in the SDK.",
        "Returns a StorageManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getstoragemanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getstoragemanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var storageManager = discord.GetStorageManager();\n"
          }
        ]
      }
    },
    "GetStoreManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getstoremanager",
      "content": [
        "Fetches an instance of the manager for interfacing with SKUs and Entitlements in the SDK.",
        "Returns a StoreManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getstoremanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getstoremanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var storeManager = discord.GetStoreManager();\n"
          }
        ]
      }
    },
    "GetVoiceManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getvoicemanager",
      "content": [
        "Fetches an instance of the manager for interfacing with voice chat in the SDK.",
        "Returns a VoiceManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getvoicemanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getvoicemanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var voiceManager = discord.GetVoiceManager();\n"
          }
        ]
      }
    },
    "GetAchievementManager": {
      "level": 2,
      "url": "https://discord.com/developers/docs/game-sdk/discord#getachievementmanager",
      "content": [
        "Fetches an instance of the manager for interfacing with achievements in the SDK.",
        "Returns an AchievementManager.",
        "|Parameters",
        "|Example"
      ],
      "Parameters": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getachievementmanager-parameters",
        "content": [
          "None"
        ]
      },
      "Example": {
        "level": 6,
        "url": "https://discord.com/developers/docs/game-sdk/discord#getachievementmanager-example",
        "content": [
          {
            "language": "cs",
            "code": "var achievementManager = discord.GetAchievementManager();\n"
          }
        ]
      }
    }
  }
}