{
  "OAuth2 Scopes": {
    "activities.read": {
      "comments": {
        "Description": "allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval"
      }
    },
    "activities.write": {
      "comments": {
        "Description": "allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)"
      }
    },
    "applications.builds.read": {
      "comments": {
        "Description": "allows your app to read build data for a user's applications"
      }
    },
    "applications.builds.upload": {
      "comments": {
        "Description": "allows your app to upload/update builds for a user's applications - requires Discord approval"
      }
    },
    "applications.commands": {
      "comments": {
        "Description": "allows your app to use commands in a guild"
      }
    },
    "applications.commands.update": {
      "comments": {
        "Description": "allows your app to update its commands using a Bearer token - client credentials grant only"
      }
    },
    "applications.commands.permissions.update": {
      "comments": {
        "Description": "allows your app to update permissions for its commands in a guild a user has permissions to"
      }
    },
    "applications.entitlements": {
      "comments": {
        "Description": "allows your app to read entitlements for a user's applications"
      }
    },
    "applications.store.update": {
      "comments": {
        "Description": "allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications"
      }
    },
    "bot": {
      "comments": {
        "Description": "for oauth2 bots, this puts the bot in the user's selected guild by default"
      }
    },
    "connections": {
      "comments": {
        "Description": "allows /users/@me/connections to return linked third-party accounts"
      }
    },
    "dm_channels.read": {
      "comments": {
        "Description": "allows your app to see information about the user's DMs and group DMs - requires Discord approval"
      }
    },
    "email": {
      "comments": {
        "Description": "enables /users/@me to return an email"
      }
    },
    "gdm.join": {
      "comments": {
        "Description": "allows your app to join users to a group dm"
      }
    },
    "guilds": {
      "comments": {
        "Description": "allows /users/@me/guilds to return basic information about all of a user's guilds"
      }
    },
    "guilds.join": {
      "comments": {
        "Description": "allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild"
      }
    },
    "guilds.members.read": {
      "comments": {
        "Description": "allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild"
      }
    },
    "identify": {
      "comments": {
        "Description": "allows /users/@me without email"
      }
    },
    "messages.read": {
      "comments": {
        "Description": "for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)"
      }
    },
    "relationships.read": {
      "comments": {
        "Description": "allows your app to know a user's friends and implicit relationships - requires Discord approval"
      }
    },
    "rpc": {
      "comments": {
        "Description": "for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval"
      }
    },
    "rpc.activities.write": {
      "comments": {
        "Description": "for local rpc server access, this allows you to update a user's activity - requires Discord approval"
      }
    },
    "rpc.notifications.read": {
      "comments": {
        "Description": "for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval"
      }
    },
    "rpc.voice.read": {
      "comments": {
        "Description": "for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval"
      }
    },
    "rpc.voice.write": {
      "comments": {
        "Description": "for local rpc server access, this allows you to update a user's voice settings - requires Discord approval"
      }
    },
    "voice": {
      "comments": {
        "Description": "allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval"
      }
    },
    "webhook.incoming": {
      "comments": {
        "Description": "this generates a webhook that is returned in the oauth token response for authorization code grants"
      }
    }
  },
  "Bot Auth Parameters": {
    "client_id": {
      "comments": {
        "Description": "your app's client id"
      }
    },
    "scope": {
      "comments": {
        "Description": "needs to include bot for the bot flow"
      }
    },
    "permissions": {
      "comments": {
        "Description": "the permissions you're requesting"
      }
    },
    "guild_id": {
      "comments": {
        "Description": "pre-fills the dropdown picker with a guild for the user"
      }
    },
    "disable_guild_select": {
      "comments": {
        "Description": "true or false\u2014disallows the user from changing the guild dropdown"
      }
    }
  }
}