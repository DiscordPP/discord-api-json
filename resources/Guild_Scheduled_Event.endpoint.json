{
  "List Scheduled Events for Guild": {
    "command": "GET",
    "url": "/guilds/{guild.id}/scheduled-events",
    "docs_url": "https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild",
    "url params": {
      "guild.id": {
        "type": "snowflake"
      }
    },
    "query string": {
      "with_user_count": {
        "type": "boolean",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "include number of users subscribed to each event"
        }
      }
    }
  },
  "Create Guild Scheduled Event": {
    "command": "POST",
    "url": "/guilds/{guild.id}/scheduled-events",
    "docs_url": "https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event",
    "url params": {
      "guild.id": {
        "type": "snowflake"
      }
    },
    "json": {
      "channel_id": {
        "type": "snowflake",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the channel id of the scheduled event.",
          "Name Note": "Optional for events with 'entity_type': EXTERNAL",
          "Type Note": "Optional for events with 'entity_type': EXTERNAL"
        }
      },
      "entity_metadata": {
        "type": "entity metadata",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the entity metadata of the scheduled event",
          "Name Note": "Required for events with 'entity_type': EXTERNAL"
        }
      },
      "name": {
        "type": "string",
        "optional": false,
        "nullable": false,
        "comments": {
          "Description": "the name of the scheduled event"
        }
      },
      "privacy_level": {
        "type": "privacy level",
        "optional": false,
        "nullable": false,
        "comments": {
          "Description": "the privacy level of the scheduled event"
        }
      },
      "scheduled_start_time": {
        "type": "ISO8601 timestamp",
        "optional": false,
        "nullable": false,
        "comments": {
          "Description": "the time to schedule the scheduled event"
        }
      },
      "scheduled_end_time": {
        "type": "ISO8601 timestamp",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the time when the scheduled event is scheduled to end",
          "Name Note": "Required for events with 'entity_type': EXTERNAL"
        }
      },
      "description": {
        "type": "string",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the description of the scheduled event"
        }
      },
      "entity_type": {
        "type": "entity type",
        "optional": false,
        "nullable": false,
        "comments": {
          "Description": "the entity type of the scheduled event"
        }
      },
      "image": {
        "type": "image data",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the cover image of the scheduled event"
        }
      }
    }
  },
  "Get Guild Scheduled Event": {
    "command": "GET",
    "url": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "docs_url": "https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event",
    "url params": {
      "guild.id": {
        "type": "snowflake"
      },
      "guild_scheduled_event.id": {
        "type": "snowflake"
      }
    },
    "query string": {
      "with_user_count": {
        "type": "boolean",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "include number of users subscribed to this event"
        }
      }
    }
  },
  "Modify Guild Scheduled Event": {
    "command": "PATCH",
    "url": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "docs_url": "https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event",
    "url params": {
      "guild.id": {
        "type": "snowflake"
      },
      "guild_scheduled_event.id": {
        "type": "snowflake"
      }
    },
    "json": {
      "channel_id": {
        "type": "snowflake",
        "optional": true,
        "nullable": true,
        "comments": {
          "Description": "the channel id of the scheduled event, set to null if changing entity type to EXTERNAL",
          "Name Note": "If updating entity_type to EXTERNAL:"
        }
      },
      "entity_metadata": {
        "type": "entity metadata",
        "optional": true,
        "nullable": true,
        "comments": {
          "Description": "the entity metadata of the scheduled event"
        }
      },
      "name": {
        "type": "string",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the name of the scheduled event"
        }
      },
      "privacy_level": {
        "type": "privacy level",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the privacy level of the scheduled event"
        }
      },
      "scheduled_start_time": {
        "type": "ISO8601 timestamp",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the time to schedule the scheduled event"
        }
      },
      "scheduled_end_time": {
        "type": "ISO8601 timestamp",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the time when the scheduled event is scheduled to end",
          "Name Note": "If updating entity_type to EXTERNAL:"
        }
      },
      "description": {
        "type": "string",
        "optional": true,
        "nullable": true,
        "comments": {
          "Description": "the description of the scheduled event"
        }
      },
      "entity_type": {
        "type": "event entity type",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the entity type of the scheduled event",
          "Name Note": "If updating entity_type to EXTERNAL:"
        }
      },
      "status": {
        "type": "event status",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the status of the scheduled event"
        }
      },
      "image": {
        "type": "image data",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "the cover image of the scheduled event"
        }
      }
    }
  },
  "Delete Guild Scheduled Event": {
    "command": "DELETE",
    "url": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "docs_url": "https://discord.com/developers/docs/resources/guild-scheduled-event#delete-guild-scheduled-event",
    "url params": {
      "guild.id": {
        "type": "snowflake"
      },
      "guild_scheduled_event.id": {
        "type": "snowflake"
      }
    }
  },
  "Get Guild Scheduled Event Users": {
    "command": "GET",
    "url": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}/users",
    "docs_url": "https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event-users",
    "url params": {
      "guild.id": {
        "type": "snowflake"
      },
      "guild_scheduled_event.id": {
        "type": "snowflake"
      }
    },
    "query string": {
      "limit": {
        "type": "number",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "number of users to return (up to maximum 100)",
          "Default": "100"
        }
      },
      "with_member": {
        "type": "boolean",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "include guild member data if it exists",
          "Default": "false"
        }
      },
      "before": {
        "type": "snowflake",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "consider only users before given user id",
          "Name Note": "Provide a user id to before and after for pagination. Users will always be returned in ascending order by user_id. If both before and after are provided, only before is respected. Fetching users in-between before and after is not supported.",
          "Default": "null"
        }
      },
      "after": {
        "type": "snowflake",
        "optional": true,
        "nullable": false,
        "comments": {
          "Description": "consider only users after given user id",
          "Name Note": "Provide a user id to before and after for pagination. Users will always be returned in ascending order by user_id. If both before and after are provided, only before is respected. Fetching users in-between before and after is not supported.",
          "Default": "null"
        }
      }
    }
  }
}