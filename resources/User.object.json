{
  "User": {
    "parser-data": {
      "docs_url": "https://discord.com/developers/docs/resources/user#user-object-user-structure"
    },
    "id": {
      "type": "snowflake",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "the user's id",
        "Required Oauth2 Scope": "identify"
      }
    },
    "username": {
      "type": "string",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "the user's username, not unique across the platform",
        "Required Oauth2 Scope": "identify"
      }
    },
    "discriminator": {
      "type": "string",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "the user's 4-digit discord-tag",
        "Required Oauth2 Scope": "identify"
      }
    },
    "avatar": {
      "type": "string",
      "optional": false,
      "nullable": true,
      "comments": {
        "Description": "the user's avatar hash",
        "Required Oauth2 Scope": "identify"
      }
    },
    "bot": {
      "type": "boolean",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "whether the user belongs to an OAuth2 application",
        "Required Oauth2 Scope": "identify"
      }
    },
    "system": {
      "type": "boolean",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "whether the user is an Official Discord System user (part of the urgent message system)",
        "Required Oauth2 Scope": "identify"
      }
    },
    "mfa_enabled": {
      "type": "boolean",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "whether the user has two factor enabled on their account",
        "Required Oauth2 Scope": "identify"
      }
    },
    "banner": {
      "type": "string",
      "optional": true,
      "nullable": true,
      "comments": {
        "Description": "the user's banner hash",
        "Required Oauth2 Scope": "identify"
      }
    },
    "accent_color": {
      "type": "integer",
      "optional": true,
      "nullable": true,
      "comments": {
        "Description": "the user's banner color encoded as an integer representation of hexadecimal color code",
        "Required Oauth2 Scope": "identify"
      }
    },
    "locale": {
      "type": "string",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "the user's chosen language option",
        "Required Oauth2 Scope": "identify"
      }
    },
    "verified": {
      "type": "boolean",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "whether the email on this account has been verified",
        "Required Oauth2 Scope": "email"
      }
    },
    "email": {
      "type": "string",
      "optional": true,
      "nullable": true,
      "comments": {
        "Description": "the user's email",
        "Required Oauth2 Scope": "email"
      }
    },
    "flags": {
      "type": "integer",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "the flags on a user's account",
        "Required Oauth2 Scope": "identify"
      }
    },
    "premium_type": {
      "type": "integer",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "the type of Nitro subscription on a user's account",
        "Required Oauth2 Scope": "identify"
      }
    },
    "public_flags": {
      "type": "integer",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "the public flags on a user's account",
        "Required Oauth2 Scope": "identify"
      }
    }
  },
  "Connection": {
    "parser-data": {
      "docs_url": "https://discord.com/developers/docs/resources/user#connection-object-connection-structure"
    },
    "id": {
      "type": "string",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "id of the connection account"
      }
    },
    "name": {
      "type": "string",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "the username of the connection account"
      }
    },
    "type": {
      "type": "string",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "the service of this connection"
      }
    },
    "revoked": {
      "type": "boolean",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "whether the connection is revoked"
      }
    },
    "integrations": {
      "type": "array",
      "optional": true,
      "nullable": false,
      "comments": {
        "Description": "an array of partial server integrations"
      }
    },
    "verified": {
      "type": "boolean",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "whether the connection is verified"
      }
    },
    "friend_sync": {
      "type": "boolean",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "whether friend sync is enabled for this connection"
      }
    },
    "show_activity": {
      "type": "boolean",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "whether activities related to this connection will be shown in presence updates"
      }
    },
    "visibility": {
      "type": "integer",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "visibility of this connection"
      }
    }
  },
  "ModifyCurrentUserParams": {
    "parser-data": {
      "docs_url": "https://discord.com/developers/docs/resources/user#modify-current-user-json-params"
    },
    "username": {
      "type": "string",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "user's username, if changed may cause the user's discriminator to be randomized."
      },
      "target": "json"
    },
    "avatar": {
      "type": "image data",
      "optional": false,
      "nullable": true,
      "comments": {
        "Description": "if passed, modifies the user's avatar"
      },
      "target": "json"
    }
  },
  "GetCurrentUserGuildsParams": {
    "parser-data": {
      "docs_url": "https://discord.com/developers/docs/resources/user#get-current-user-guilds-query-string-params"
    },
    "before": {
      "type": "snowflake",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "get guilds before this guild ID",
        "Required": "false",
        "Default": "absent"
      },
      "target": "query string"
    },
    "after": {
      "type": "snowflake",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "get guilds after this guild ID",
        "Required": "false",
        "Default": "absent"
      },
      "target": "query string"
    },
    "limit": {
      "type": "integer",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "max number of guilds to return (1-200)",
        "Required": "false",
        "Default": "200"
      },
      "target": "query string"
    }
  },
  "CreateDmParams": {
    "parser-data": {
      "docs_url": "https://discord.com/developers/docs/resources/user#create-dm-json-params"
    },
    "recipient_id": {
      "type": "snowflake",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "the recipient to open a DM channel with"
      },
      "target": "json"
    }
  },
  "CreateGroupDmParams": {
    "parser-data": {
      "docs_url": "https://discord.com/developers/docs/resources/user#create-group-dm-json-params"
    },
    "access_tokens": {
      "type": "array of strings",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "access tokens of users that have granted your app the gdm.join scope"
      },
      "target": "json"
    },
    "nicks": {
      "type": "dict",
      "optional": false,
      "nullable": false,
      "comments": {
        "Description": "a dictionary of user ids to their respective nicknames"
      },
      "target": "json"
    }
  }
}